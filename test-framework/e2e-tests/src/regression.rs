use sudo_test::{Command, Env, TextFile};

use crate::Result;

#[test]
fn syslog_writer_should_not_hang() -> Result<()> {
    let env = Env(TextFile("ALL ALL=(ALL:ALL) NOPASSWD: ALL").chmod("644")).build()?;

    let stdout = Command::new("sudo")
        .args(["env", "CC=clang-18", "CXX=clangwhoami"])
        .output(&env)?
        .stdout()?;

    assert_eq!(stdout, "root");

    Ok(())
}

#[test]
fn no_permissions_should_not_violate_io_safety() -> Result<()> {
    let env = Env(TextFile("ALL ALL=(ALL:ALL) NOPASSWD: ALL").chmod("644"))
        .file("/bin/foo", "#!/bin/sh") // File not executable
        .build()?;

    let output = Command::new("sudo").arg("/bin/foo").output(&env)?;

    assert!(!output.status().success());

    let stderr = output.stderr();
    assert!(!stderr.contains("IO Safety violation"), "{stderr}");

    assert_eq!(
        stderr,
        "sudo-rs: cannot execute '/usr/bin/foo': Permission denied (os error 13)"
    );

    Ok(())
}
